%% import data
data1 = readtable('/Users/amatl/Private/Studies/Digital Forensics/glasses/user1_csv.csv');
data2 = readtable('/Users/amatl/Private/Studies/Digital Forensics/glasses/user2_csv.csv');
data3 = readtable('/Users/amatl/Private/Studies/Digital Forensics/glasses/user3_csv.csv');
data4 = readtable('/Users/amatl/Private/Studies/Digital Forensics/glasses/user4_csv.csv');

%% creating bar plot

Array1 = table2array(data1);

Standing1 = sum(Array1(:, 2) == 1);
Walking1 = sum(Array1(:, 2) == 2);
Turn1 = sum(Array1(:, 2) == 3);
Stairs_up1 = sum(Array1(:, 2) == 4);
Stairs_down1 = sum(Array1(:, 2) == 5);

Array2 = table2array(data2);

Standing2 = sum(Array2(:, 2) == 1);
Walking2 = sum(Array2(:, 2) == 2);
Turn2 = sum(Array2(:, 2) == 3);
Stairs_up2 = sum(Array2(:, 2) == 4);
Stairs_down2 = sum(Array2(:, 2) == 5);

Array3 = table2array(data3);

Standing3 = sum(Array3(:, 2) == 1);
Walking3 = sum(Array3(:, 2) == 2);
Turn3 = sum(Array3(:, 2) == 3);
Stairs_up3 = sum(Array3(:, 2) == 4);
Stairs_down3 = sum(Array3(:, 2) == 5);

Array4 = table2array(data4);

Standing4 = sum(Array4(:, 2) == 1);
Walking4 = sum(Array4(:, 2) == 2);
Turn4 = sum(Array4(:, 2) == 3);
Stairs_up4 = sum(Array4(:, 2) == 4);
Stairs_down4 = sum(Array4(:, 2) == 5);

A1 = [Standing1, Walking1, Turn1, Stairs_up1, Stairs_down1];

A2 = [Standing2, Walking2, Turn2, Stairs_up2, Stairs_down2];

A3 = [Standing3, Walking3, Turn3, Stairs_up3, Stairs_down3];

A4 = [Standing4, Walking4, Turn4, Stairs_up4, Stairs_down4];


X1 = categorical({'Standing','Walking','Turn','Stairs up', 'Stairs down'});
X1 = reordercats(X1,{'Standing','Walking','Turn','Stairs up', 'Stairs down'});
Y = [A1; A2; A3; A4];
bar(X1, Y)
figure;

%% plots action vs time 

subplot(2, 2, 1)
scatter(Array1(:, 3), Array1(:, 2), 'blue', 'filled')
[t,s] = title('User1','1 = Standing, 2 = Walking, 3 = Turn, 4 = Stairs_up, 5 = Stairs_down');
s.FontSize = 8;
xlabel("time")
ylabel("action")

subplot(2, 2, 2)
scatter(Array2(:, 3), Array2(:, 2), 'blue', 'filled')
[t,s] = title('User2','1 = Standing, 2 = Walking, 3 = Turn, 4 = Stairs_up, 5 = Stairs_down');
s.FontSize = 8;
xlabel("time")
ylabel("action")

subplot(2, 2, 3)
scatter(Array3(:, 3), Array3(:, 2), 'blue', 'filled')
[t,s] = title('User3','1 = Standing, 2 = Walking, 3 = Turn, 4 = Stairs_up, 5 = Stairs_down');
s.FontSize = 8;
xlabel("time")
ylabel("action")

subplot(2, 2, 4)
scatter(Array4(:, 3), Array4(:, 2), 'blue', 'filled')
[t,s] = title('User4','1 = Standing, 2 = Walking, 3 = Turn, 4 = Stairs_up, 5 = Stairs_down');
s.FontSize = 8;
xlabel("time")
ylabel("action")
figure;


%% creating plots for different users
% first user

subplot(3, 3, 1)
scatter(Array1(:, 3), Array1(:,8), ".")
title("User1 - ACC X (G)")

subplot(3, 3, 4)
scatter(Array1(:, 3), Array1(:,9), ".")
title("User1 - ACC Y (G)")

subplot(3, 3, 7)
scatter(Array1(:, 3), Array1(:,10), ".")
title("User1 - ACC Z (G)")

subplot(3, 3, 2)
scatter(Array1(:, 3), Array1(:,11), ".")
title("User1 - GYRO X (dps)")

subplot(3, 3, 5)
scatter(Array1(:, 3), Array1(:,12), ".")
title("User1 - GYRO Y (dps)")

subplot(3, 3, 8)
scatter(Array1(:, 3), Array1(:,13), ".")
title("User1 - GYRO Z (dps)")

subplot(3, 3, 3)
scatter(Array1(:, 3), Array1(:,17), ".")
title("User1 - ROLL (¬∞)")

subplot(3, 3, 6)
scatter(Array1(:, 3), Array1(:,18), ".")
title("User1 - PITCH (¬∞)")

subplot(3, 3, 9)
scatter(Array1(:, 3), Array1(:,19), ".")
title("User1 - YAW (¬∞)")
figure;


% second user

subplot(3, 3, 1)
scatter(Array2(:, 3), Array2(:,8), ".")
title("User2 - ACC X (G)")

subplot(3, 3, 4)
scatter(Array2(:, 3), Array2(:,9), ".")
title("User2 - ACC Y (G)")

subplot(3, 3, 7)
scatter(Array2(:, 3), Array2(:,10), ".")
title("User2 - ACC Z (G)")

subplot(3, 3, 2)
scatter(Array2(:, 3), Array2(:,11), ".")
title("User2 - GYRO X (dps)")

subplot(3, 3, 5)
scatter(Array2(:, 3), Array2(:,12), ".")
title("User2 - GYRO Y (dps)")

subplot(3, 3, 8)
scatter(Array2(:, 3), Array2(:,13), ".")
title("User2 - GYRO Z (dps)")

subplot(3, 3, 3)
scatter(Array2(:, 3), Array2(:,17), ".")
title("User2 - ROLL (¬∞)")

subplot(3, 3, 6)
scatter(Array2(:, 3), Array2(:,18), ".")
title("User2 - PITCH (¬∞)")

subplot(3, 3, 9)
scatter(Array2(:, 3), Array2(:,19), ".")
title("User2 - YAW (¬∞)")
figure;


% third user

subplot(3, 3, 1)
scatter(Array3(:, 3), Array3(:,8), ".")
title("User3 - ACC X (G)")

subplot(3, 3, 4)
scatter(Array3(:, 3), Array3(:,9), ".")
title("User3 - ACC Y (G)")

subplot(3, 3, 7)
scatter(Array3(:, 3), Array3(:,10), ".")
title("User3 - ACC Z (G)")

subplot(3, 3, 2)
scatter(Array3(:, 3), Array3(:,11), ".")
title("User3 - GYRO X (dps)")

subplot(3, 3, 5)
scatter(Array3(:, 3), Array3(:,12), ".")
title("User3 - GYRO Y (dps)")

subplot(3, 3, 8)
scatter(Array3(:, 3), Array3(:,13), ".")
title("User3 - GYRO Z (dps)")

subplot(3, 3, 3)
scatter(Array3(:, 3), Array3(:,17), ".")
title("User3 - ROLL (¬∞)")

subplot(3, 3, 6)
scatter(Array3(:, 3), Array3(:,18), ".")
title("User3 - PITCH (¬∞)")

subplot(3, 3, 9)
scatter(Array3(:, 3), Array3(:,19), ".")
title("User3 - YAW (¬∞)")
figure;


% fourth user

subplot(3, 3, 1)
scatter(Array4(:, 3), Array4(:,8), ".")
title("User4 - ACC X (G)")

subplot(3, 3, 4)
scatter(Array4(:, 3), Array4(:,9), ".")
title("User4 - ACC Y (G)")

subplot(3, 3, 7)
scatter(Array4(:, 3), Array4(:,10), ".")
title("User4 - ACC Z (G)")

subplot(3, 3, 2)
scatter(Array4(:, 3), Array4(:,11), ".")
title("User4 - GYRO X (dps)")

subplot(3, 3, 5)
scatter(Array4(:, 3), Array4(:,12), ".")
title("User4 - GYRO Y (dps)")

subplot(3, 3, 8)
scatter(Array4(:, 3), Array4(:,13), ".")
title("User4 - GYRO Z (dps)")

subplot(3, 3, 3)
scatter(Array4(:, 3), Array4(:,17), ".")
title("User4 - ROLL (¬∞)")

subplot(3, 3, 6)
scatter(Array4(:, 3), Array4(:,18), ".")
title("User4 - PITCH (¬∞)")

subplot(3, 3, 9)
scatter(Array4(:, 3), Array4(:,19), ".")
title("User4 - YAW (¬∞)")

%% preprocessing

% normalize (mean = 0 and std = 1)

NormArray1 = zscore(Array1);
NormArray2 = zscore(Array2);
NormArray3 = zscore(Array3);
NormArray4 = zscore(Array4);

% Combine arrays to form a single data matrix

Ndata = [NormArray1; NormArray2; NormArray3; NormArray4];


data = [Array1; Array2; Array3; Array4];
% Extract features (columns 3 to 19) and labels (column 2)

X = data(:, 8:19);
y = data(:, 2);

classes = unique(y);
for i = 1:length(classes)
    class = classes(i);
    X_class = X(y == class, :);
end

NX = Ndata(:, 8:19);

%% creating train and test sets

% Split data into training and test sets

rng(1); % for reproducibility
p = 0.75; % proportion of data to use for training
idx = randperm(size(Ndata,1));
train_idx = idx(1:round(p*size(Ndata,1)));
test_idx = idx(round(p*size(Ndata,1))+1:end);
X_train = NX(train_idx, :);
y_train = y(train_idx);
X_test = NX(test_idx, :);
y_test = y(test_idx);

%% KNN classifier

% Train the KNN classifier
model = fitcknn(X_train, y_train);

% Evaluate the KNN classifier on the test set

y_pred = predict(model, X_test);
accuracy = mean(y_pred == y_test);
fprintf("KNN accuracy: %f\n", accuracy)

% Create the confusion matrix
C = confusionmat(y_test, y_pred);
C_percent = 100 * C ./ sum(C, 2);


% Create the heatmap
figure;
heatmap(C_percent, "Title", 'KNN Confusion Matrix in [%]')
   

%% SVM classifier


% Train the SVM classifier

svm_model = fitcecoc(X_train, y_train);

% Evaluate the SVM classifier on the test set

y_pred = predict(svm_model, X_test);
accuracy = mean(y_pred == y_test);
fprintf("SVM accuracy: %f\n", accuracy)

% Create the confusion matrix
C_s = confusionmat(y_test, y_pred);
C_percent_s = 100 * C_s ./ sum(C_s, 2);

% Create the heatmap
figure;
heatmap(C_percent_s, "Title", 'SVM Confusion Matrix in [%]')

%% ANN classifier
net = feedforwardnet(10); % this creates a feedforward neural network with 10 hidden neurons

% Train the neural network
net = train(net, X_train', y_train');

% Test the neural network
y_pred = net(X_test');
y_pred = round(y_pred');

% Calculate the accuracy
acc = mean(y_pred == y_test);
fprintf('ANN accuracy: %.2f%%\n', acc * 100);

% Create the confusion matrix
C_a = confusionmat(y_test, y_pred);
C_a = C_a(1:5, 1:5);
C_percent_a = 100 * C_a ./ sum(C_a, 2);

% Create the heatmap
figure;
heatmap(C_percent_a, "Title", 'ANN Confusion Matrix in [%]')
